#pragma once
#ifndef GAME_H
#define GAME_H

//////// LIBS

// STD

//////// ME

// SAFE

// UNSAFE
#include "GameModel.h"
#include "View.h"
#include "Controller.h"

//////// DECLARATIONS

//! Brief: Container for architecture to frolick.
/*!
What-Data: Model, View, Controller.
What-Verb: Updates the MVC.
Where: In main.
Why: Provides an area for the architectual structures of the program to update themselves
How: Through the contructor and the update method.
Misc: Uses dependency injection during initialization.
*/
class Game
{
	////////////////////////////////////////////////////////////////////////////////////////////////////
	////////// Data
	////////////////////////////////////////////////////////////////////////////////////////////////////
private:
	GameModel model; // must be initialized before View and Controller in init list
	View view; // dependinject model
	Controller controller; // dependinject model

	//////////////////// DataInterface
	//////////
public:

	////////////////////////////////////////////////////////////////////////////////////////////////////
	////////// Functions
	////////////////////////////////////////////////////////////////////////////////////////////////////
private:

	//////////////////// FuncInterface
	//////////
public:
	void build_from_file();
	void update();

	//////////////////// Operators
	//////////
public:

	////////////////////////////////////////////////////////////////////////////////////////////////////
	////////// Constructors
	////////////////////////////////////////////////////////////////////////////////////////////////////
public:
	//////////////////// Ctor
	//////////
	explicit Game();

	//////////////////// Dtor
	//////////

	//////////////////// Copy
	//////////
	explicit Game(const Game& other) = delete; // copy constructor
	Game& operator=(const Game& other) = delete; // copy assignment

	//////////////////// Move
	//////////
	explicit Game(Game&& other) noexcept = delete; // move constructor
	Game& operator=(Game&& other) noexcept = delete; // move assignment

};
#endif