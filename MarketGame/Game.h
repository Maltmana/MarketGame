#pragma once
#ifndef GAME_H
#define GAME_H

//////// LIBS
#include <unordered_map>
#include <string>
#include <sstream>

//////// ME

// ME SAFE
#include "Enums.h"

// ME UNSAFE
#include "Area.h"

// DECLARATIONS

//////////////////////////////////////////////////////////////////////////////////////////////////// >8)
//////////////////////////////////////////////////////////////////////////////////////////////////// Game.h
//////////////////////////////////////////////////////////////////////////////////////////////////// >8)

class Game
{
	////////////////////////////////////////>~
	////////// Data
	////////////////////////////////////////>~
private:
	// game data
	std::unordered_map<AreaType, Area> areas;
	Area * playerArea;

	// user input and console data
	std::string inString;

	// output to console
	std::stringstream outString;

	//////////////////// Mutators
	//////////
public:

	////////////////////////////////////////>~
	////////// Constructors
	////////////////////////////////////////>~
public:

	//////////////////// Ctor
	//////////

	Game();

	//////////////////// Dtor
	//////////

	//////////////////// Copy
	//////////

	//////////////////// Move
	//////////

	////////////////////////////////////////>~
	////////// Functions
	////////////////////////////////////////>~

	//////////////////// Public
	//////////
public:

	void update();

	//////////////////// Private
	//////////
private:

	////////////////////////////////////////>~
	////////// Operators
	////////////////////////////////////////>~
public:

};

#endif