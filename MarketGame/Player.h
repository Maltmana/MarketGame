#pragma once
#ifndef PLAYER_H
#define PLAYER_H

//////// LIBS

#include <string>
#include <memory>

//////// ME

// ME SAFE

// ME UNSAFE
#include "Area.h"

// DECLARATIONS

//////////////////////////////////////////////////////////////////////////////////////////////////// >8)
//////////////////////////////////////////////////////////////////////////////////////////////////// Player.h
//////////////////////////////////////////////////////////////////////////////////////////////////// >8)

class Player
{
	////////////////////////////////////////>~
	////////// Data
	////////////////////////////////////////>~
private:

	// aesthetics
	std::string name{ "Generic Genericson" }; // get set

	// mental states
	int tiredness{ 0 }; // get

	// objects
	int goldPieces{ 0 }; // get

	// location
	Area* area{ nullptr };

	//////////////////// Mutators
	//////////
public:

	std::string get_name() const { return name; };
	void set_name(std::string name_) { name = name_; };

	int get_tiredness() const { return tiredness; };

	int get_goldPieces() const { return goldPieces; };

	Area* get_area() const { return area; };
	void set_area(Area * area_) { area = area_; };

	////////////////////////////////////////>~
	////////// Constructors
	////////////////////////////////////////>~
public:

	//////////////////// Ctor
	//////////
	Player();

	//////////////////// Dtor
	//////////

	//////////////////// Copy
	//////////

	//////////////////// Move
	//////////

	////////////////////////////////////////>~
	////////// Functions
	////////////////////////////////////////>~

	//////////////////// Public
	//////////
public:

	//////////////////// Private
	//////////
private:

	////////////////////////////////////////>~
	////////// Operators
	////////////////////////////////////////>~
public:
};

#endif