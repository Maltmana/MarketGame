#pragma once
#ifndef CONTROLLER_H
#define CONTROLLER_H

//////// LIBS

#include <string>
#include <sstream>

//////// ME

// ME SAFE

// ME UNSAFE
#include "GameModel.h"

// DECLARATIONS

//////////////////////////////////////////////////////////////////////////////////////////////////// >8)
//////////////////////////////////////////////////////////////////////////////////////////////////// Controller.h
//////////////////////////////////////////////////////////////////////////////////////////////////// >8)

// User input and the mutation that it has on model.
class Controller
{
	////////////////////////////////////////>~
	////////// Data
	////////////////////////////////////////>~
private:

	// d injection
	GameModel & model;

	// holds user input
	std::string inString;

	// number taken from user input
	int inNumber{ 0 };


	//////////////////// Mutators
	//////////
public:

	////////////////////////////////////////>~
	////////// Constructors
	////////////////////////////////////////>~
public:

	//////////////////// Ctor
	//////////

	Controller(GameModel & model_);

	//////////////////// Dtor
	//////////

	//////////////////// Copy
	//////////

	//////////////////// Move
	//////////

	////////////////////////////////////////>~
	////////// Functions
	////////////////////////////////////////>~

	//////////////////// Public
	//////////
public:

	void update();

	//////////////////// Private
	//////////
private:

	// Loops until user provides good enough input to continue game simulation
	// Also prints crap to screen if the user is an idiot.
	void receive_input();

	// Converts string into other forms of input like integer.
	void process_input();

	// Mutates model based on that input.
	void act_on_input();

	////////////////////////////////////////>~
	////////// Operators
	////////////////////////////////////////>~
public:

};

#endif