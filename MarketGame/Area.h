#pragma once
#ifndef AREA_H
#define AREA_H

//////// LIBS

#include <string>

//////// ME

// ME SAFE
#include "Enums.h"

// ME UNSAFE

// DECLARATIONS

//////////////////////////////////////////////////////////////////////////////////////////////////// >8)
//////////////////////////////////////////////////////////////////////////////////////////////////// Area.h
//////////////////////////////////////////////////////////////////////////////////////////////////// >8)

class Area
{
	////////////////////////////////////////>~
	////////// Data
	////////////////////////////////////////>~
private:

	std::string description;
	AreaType areaType;
	char hotkey;

	//////////////////// Mutators
	//////////
public:

	////////////////////////////////////////>~
	////////// Constructors
	////////////////////////////////////////>~
public:
	//////////////////// Ctor
	//////////
	Area(std::string description, AreaType areaType, char hotkey)
		:
		description{description},
		areaType{areaType},
		hotkey{hotkey}
	{
	}

	//////////////////// Dtor
	//////////

	//////////////////// Copy
	//////////

	//////////////////// Move
	//////////

	////////////////////////////////////////>~
	////////// Functions
	////////////////////////////////////////>~

	//////////////////// Public
	//////////
public:

	//////////////////// Private
	//////////
private:

	////////////////////////////////////////>~
	////////// Operators
	////////////////////////////////////////>~
public:
};

#endif